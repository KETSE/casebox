Tree
===========

The tree is generated by ``\CB\TreeNode\Base.php`` descendant classes. The configuration of the tree is defined as a series of node class instances along with config options in ``treeNodes`` config.

.. image:: /i/dev/cb_tree_nodes_config.png

The first step is to determine the root node. By default, CB uses the node with ID==1 from mysql ``tree`` table. To define a custom root node, declare it in ``rootNode`` config option.

Example:

.. code-block:: json

    {
      "id": 0
      ,"text": "Custom Root Node"
      ,"createMenu": "8670,10173"
    }

For each node, CB will iterate through node configs (illustrated in above picture) and call the ``acceptedPath`` function to see if the node class will provide a list of nodes for the given tree path.

One of the first checks in ``acceptedPath`` is if ``pid`` in the node config equals the ``id`` of the node to load children for.

Assuming we have only the root node loaded and the id==1, CB will scan each node config and load those with a ``"pid": 1``

In the picture below, 'pid==8824', it means CB will load nodes from ``closedTasks`` config only when node with id==8824 is expanded.

.. image:: /i/dev/cb_tree_node_config.png

Node config should have:

* ``name``: name of node config
* ``class``: PHP class name, if not specified ``name`` is used as class name
* ``pid``: the root node of this config is to be loaded when ``pid`` node is expanded in the tree

The following node classes are available:

* :doc:`tree-facetednav`
* :doc:`tree-tasks`


.. toctree::
   :hidden:
   :maxdepth: 2

   tree-facetednav
   tree-tasks

